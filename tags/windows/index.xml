<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>windows on Cloud Nine</title>
    <link>https://cloudnine.github.io/tags/windows/</link>
    <description>Recent content in windows on Cloud Nine</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 24 Jan 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://cloudnine.github.io/tags/windows/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Emacs Installation and Defaults</title>
      <link>https://cloudnine.github.io/science/2020-01-24-emacs-installation-and-defaults/</link>
      <pubDate>Fri, 24 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://cloudnine.github.io/science/2020-01-24-emacs-installation-and-defaults/</guid>
      <description>Directly below are the subheadings to the first main heading of my initialization file, see my last post Emacs Configuration Overview.I&#39;ll go through the lines of code in order, but remember, the line numbers you see in Hugo&#39;s code block css styling are relative to thecode on this page not the emacs initialization file [Hugo is the Static ContentManagement System based on GO I used to makethis blog].</description>
    </item>
    
    <item>
      <title>Windows Program Launcher</title>
      <link>https://cloudnine.github.io/science/2019-09-23-windows-program-launcher/</link>
      <pubDate>Wed, 23 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cloudnine.github.io/science/2019-09-23-windows-program-launcher/</guid>
      <description>For any readers setting up configuration files for their emacs editor, here is the quick and easy code for the windows program launchershown in the image below.Here&#39;s the config code:```elisp;path of program you want in your launcher(defvar name-of-program-p &#34;C:/full-path-to-program/program.exe&#34;); launcher function(defun launch-program-name ()(interactive)(w32-shell-execute nil name-of-program-p nil));end launch-program-name```Then you can put the launch function name in your hydra config, like this:` (&#34;</description>
    </item>
    
  </channel>
</rss>
