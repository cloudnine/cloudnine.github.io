<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Emacs Hydras on Cloud Nine</title>
    <link>https://cloudnine.github.io/tags/emacs-hydras/</link>
    <description>Recent content in Emacs Hydras on Cloud Nine</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright</copyright>
    <lastBuildDate>Fri, 31 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://cloudnine.github.io/tags/emacs-hydras/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Emacs Functions</title>
      <link>https://cloudnine.github.io/science/2020-01-31-some-emacs-configuration-functions/</link>
      <pubDate>Fri, 31 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://cloudnine.github.io/science/2020-01-31-some-emacs-configuration-functions/</guid>
      <description>Today&#39;s post has some functions from the functions declaration section of the beginning of my initialization file.  SET UP, DEFAULTS, AND CUSTOMIZATION  Necessary Adjustments when you set-up on a new computer Paths to Update on Change Executable Paths Libraries Function declarations Emacs Customization Seperate File Emax Defaults Some Defaults Frames, Buffers, And Lines Some Custom Default Functions Some New Key Bindings Popup, Pos-tip,Tooltip, Posframe Which Key</description>
    </item>
    
    <item>
      <title>Windows Program Launcher</title>
      <link>https://cloudnine.github.io/science/2019-09-23-windows-program-launcher/</link>
      <pubDate>Wed, 23 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cloudnine.github.io/science/2019-09-23-windows-program-launcher/</guid>
      <description>For any readers setting up configuration files for their emacs editor, here is the quick and easy code for the windows program launcher shown in the image below.    Here&amp;rsquo;s the config code: 
1 2 3 4 5 6 7  ;path of program you want in your launcher (defvar name-of-program-p &amp;#34;C:/full-path-to-program/program.exe&amp;#34;) ; launcher function (defun launch-program-name () (interactive) (w32-shell-execute nil name-of-program-p nil) );end launch-program-name    Then you can put the launch function name in your hydra config, like this:  (&amp;quot;p&amp;quot; launch-program-name &amp;quot;Launch This Program&amp;quot;)  For the generate hydra code see this post: Emacs Bookmarks  Thanks for reading.</description>
    </item>
    
    <item>
      <title>Emacs Bookmarks</title>
      <link>https://cloudnine.github.io/science/2019-10-20-emacs-bookmarks/</link>
      <pubDate>Sun, 20 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cloudnine.github.io/science/2019-10-20-emacs-bookmarks/</guid>
      <description>Jumping To Directories In Emacs If you want to accomplish things efficiently with your computer, you will benefit from mastering a text editor. I use emacs as a general project manager for web development, writing, and organizing thoughts, materials, and actions. Jumping to and from directories and files enables quickly me to get things done more efficiently. To do this I use a few different packages and functions. They are:  Bookmarks</description>
    </item>
    
    <item>
      <title>Emacs With an Interface</title>
      <link>https://cloudnine.github.io/science/2019-09-08-emacs-with-an-interface/</link>
      <pubDate>Tue, 08 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cloudnine.github.io/science/2019-09-08-emacs-with-an-interface/</guid>
      <description>What&#39;s All This About Text Editors? I always used to ask, why do people post about their text-editors? These days I know the reason. Computers are lightening fast, using them isn&#39;t. You need to leave what you are doing to turn on another piece of software. You have to search for files. You&#39;re constantly having to remember how a process works, or search around the IDE to figure out how to do something again.</description>
    </item>
    
  </channel>
</rss>