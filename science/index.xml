<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sciences on Cloud Nine</title>
    <link>https://cloudnine.github.io/science/</link>
    <description>Recent content in Sciences on Cloud Nine</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright</copyright>
    <lastBuildDate>Sat, 15 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://cloudnine.github.io/science/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>An Emacs Shell Hydra</title>
      <link>https://cloudnine.github.io/science/2020-02-15-emacs-shell-hydra/</link>
      <pubDate>Sat, 15 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://cloudnine.github.io/science/2020-02-15-emacs-shell-hydra/</guid>
      <description>Today&#39;s post jumps ahead to the shell hydra  Emacs is old school. You&#39;re either new to it - which means you wouldn&#39;t be here unless it was your type of thing - or you know what you&#39;re looking for. In either case, go to the side bar of this page and click on the &#39;Emacs&#39; tag. Then read the posts from oldest to newest.
In the last emacs post I covered lines 534 - 656 of my configuration file.</description>
    </item>
    
    <item>
      <title>Emacs Frames, Buffers, Lines, Defaults (&#43; Some Functions)</title>
      <link>https://cloudnine.github.io/science/2020-02-11-emacs-frames-buffers-defaults-functions/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://cloudnine.github.io/science/2020-02-11-emacs-frames-buffers-defaults-functions/</guid>
      <description>Today&#39;s post has some of the default settings from my initialization file.   SET UP, DEFAULTS, AND CUSTOMIZATION  Necessary Adjustments when you set-up on a new computer Paths to Update on Change Executable Paths Libraries Function declarations Emacs Customization Seperate File Emax Defaults Some Defaults Frames, Buffers, And Lines Some Custom Default Functions Some New Key Bindings Popup, Pos-tip,Tooltip, Posframe Which Key   
Preamble Emacs is old school.</description>
    </item>
    
    <item>
      <title>Emacs Defaults</title>
      <link>https://cloudnine.github.io/science/2020-02-09-some-emacs-defaults/</link>
      <pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://cloudnine.github.io/science/2020-02-09-some-emacs-defaults/</guid>
      <description>Today&#39;s post has some of the default settings from my initialization file.   SET UP, DEFAULTS, AND CUSTOMIZATION  Necessary Adjustments when you set-up on a new computer Paths to Update on Change Executable Paths Libraries Function declarations Emacs Customization Seperate File Emax Defaults Some Defaults Frames, Buffers, And Lines Some Custom Default Functions Some New Key Bindings Popup, Pos-tip,Tooltip, Posframe Which Key   
Preamble Last post I covered function declarations from the above subsection, lines 135 - 424 of my configuration.</description>
    </item>
    
    <item>
      <title>Emacs Functions</title>
      <link>https://cloudnine.github.io/science/2020-01-31-some-emacs-configuration-functions/</link>
      <pubDate>Fri, 31 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://cloudnine.github.io/science/2020-01-31-some-emacs-configuration-functions/</guid>
      <description>Today&#39;s post has some functions from the functions declaration section of the beginning of my initialization file.  SET UP, DEFAULTS, AND CUSTOMIZATION  Necessary Adjustments when you set-up on a new computer Paths to Update on Change Executable Paths Libraries Function declarations Emacs Customization Seperate File Emax Defaults Some Defaults Frames, Buffers, And Lines Some Custom Default Functions Some New Key Bindings Popup, Pos-tip,Tooltip, Posframe Which Key</description>
    </item>
    
    <item>
      <title>Emacs Installation and Defaults</title>
      <link>https://cloudnine.github.io/science/2020-01-24-emacs-installation-and-defaults/</link>
      <pubDate>Fri, 24 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://cloudnine.github.io/science/2020-01-24-emacs-installation-and-defaults/</guid>
      <description>Directly below are the subheadings to the first main heading of my initialization file, see my last post Emacs Configuration Overview. I&#39;ll go through the lines of code in order, but remember, the line numbers you see in Hugo&#39;s code block css styling are relative to the code on this page not the emacs initialization file [Hugo is the Static Content Management System based on GO I used to make this blog].</description>
    </item>
    
    <item>
      <title>Emacs Configuration Overview</title>
      <link>https://cloudnine.github.io/science/2020-01-19-emacs-configuration-overview/</link>
      <pubDate>Sun, 19 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://cloudnine.github.io/science/2020-01-19-emacs-configuration-overview/</guid>
      <description>Below are some notes covering among other things why I got into Emacs, where I got my version, and how my configuration is organized. As mentioned before, other text editors in use today, like Atom, IntelliJ Idea, or Sublime Text are awesome, and offer also great selections of unique packages. Atom, for example, has some super useful snippet packages. You can convert them into Yasnippet format (an Emacs snippet package), but it&#39;s a hassle.</description>
    </item>
    
    <item>
      <title>Windows Program Launcher</title>
      <link>https://cloudnine.github.io/science/2019-09-23-windows-program-launcher/</link>
      <pubDate>Wed, 23 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cloudnine.github.io/science/2019-09-23-windows-program-launcher/</guid>
      <description>For any readers setting up configuration files for their emacs editor, here is the quick and easy code for the windows program launcher shown in the image below.    Here&amp;rsquo;s the config code: 
1 2 3 4 5 6 7  ;path of program you want in your launcher (defvar name-of-program-p &amp;#34;C:/full-path-to-program/program.exe&amp;#34;) ; launcher function (defun launch-program-name () (interactive) (w32-shell-execute nil name-of-program-p nil) );end launch-program-name    Then you can put the launch function name in your hydra config, like this:  (&amp;quot;p&amp;quot; launch-program-name &amp;quot;Launch This Program&amp;quot;)  For the generate hydra code see this post: Emacs Bookmarks  Thanks for reading.</description>
    </item>
    
    <item>
      <title>Emacs Bookmarks</title>
      <link>https://cloudnine.github.io/science/2019-10-20-emacs-bookmarks/</link>
      <pubDate>Sun, 20 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cloudnine.github.io/science/2019-10-20-emacs-bookmarks/</guid>
      <description>Jumping To Directories In Emacs If you want to accomplish things efficiently with your computer, you will benefit from mastering a text editor. I use emacs as a general project manager for web development, writing, and organizing thoughts, materials, and actions. Jumping to and from directories and files enables quickly me to get things done more efficiently. To do this I use a few different packages and functions. They are:  Bookmarks</description>
    </item>
    
    <item>
      <title>Emacs With an Interface</title>
      <link>https://cloudnine.github.io/science/2019-09-08-emacs-with-an-interface/</link>
      <pubDate>Tue, 08 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cloudnine.github.io/science/2019-09-08-emacs-with-an-interface/</guid>
      <description>What&#39;s All This About Text Editors? I always used to ask, why do people post about their text-editors? These days I know the reason. Computers are lightening fast, using them isn&#39;t. You need to leave what you are doing to turn on another piece of software. You have to search for files. You&#39;re constantly having to remember how a process works, or search around the IDE to figure out how to do something again.</description>
    </item>
    
  </channel>
</rss>